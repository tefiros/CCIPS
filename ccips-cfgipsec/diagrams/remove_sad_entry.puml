@startuml
Actor C as "CCIPS Controller"
participant S as "Sysrepo"
box CCIPS
participant sac as "sad_entry_change_cb"
participant sacl as "removeSAD_entry"
participant pfa as "pf_delsad"
participant rsa as "readSAD_entry"
participant sal as "del_sad_node"
database l as "init_sad_node"
end box
participant K as "kernel"
autonumber
C -> S: Request delete of SAD entry\n(nc:operation="delete").
S -> sac: Notify about a change in the XPATH
sac -> sac: Identify the type of request (SR_OP_DELETED)
autonumber stop
sac -> sac: Identify SAD entry ID that is going to be deleted
sac -> sacl: Send SAD entry identifier (basically the name) + new xpath
autonumber resume
sacl -> l: Request local stored entry
autonumber stop
sacl -> sacl: Check if returned entry is not null (It exists)
autonumber resume
sacl -> pfa: Request deletion of the SAD entry
pfa -> pfa: Generate SADB_DELETE message with the information\nof the stored sad_entry_node
autonumber stop
pfa -> K: Send message to kernel
K -> pfa : Return success (if exists)
pfa -> sacl: Return success of entry removed from kernel
autonumber resume
sacl -> sal: Remove entry from local database
autonumber stop
sal -> l: Remove entry from local\ndatabase and free the memory
autonumber resume
sal -> sacl: Confirm deletion
autonumber stop
sacl -> sac: Confirm deletion
sac -> S: Confirm deletion and delete\nit from Sysrepo Datastore
S -> C: Confirm deletion
@enduml